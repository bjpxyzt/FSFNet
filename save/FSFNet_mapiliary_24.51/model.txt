DataParallel(
  (module): FSFNet(
    (encoder): Encoder(
      (initial_block): Stem(
        (conv_1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn_1): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv_2): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn_2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv_3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn_3): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv_4): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (bn_4): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (conv_5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn_5): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv1_8): FSF_8(
        (dropout): Dropout2d(p=0.01)
        (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2_8): FSF_8(
        (dropout): Dropout2d(p=0.02)
        (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv3_8): FSF_8(
        (dropout): Dropout2d(p=0.03)
        (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv4_8): FSF_8(
        (dropout): Dropout2d(p=0.04)
        (conv3x3_1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv3x3_2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (bn1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv1x1_8_16_channel): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1))
      (bn_conv1x1_8_16_channel): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      (conv1_16): FSF_16(
        (dropout): Dropout2d(p=0.05)
        (conv3x1_0): Conv2d(96, 96, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_1): Conv2d(96, 96, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x3_2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=96)
        (bn1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2_16): FSF_16(
        (dropout): Dropout2d(p=0.06)
        (conv3x1_0): Conv2d(96, 96, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_1): Conv2d(96, 96, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x3_2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=96)
        (bn1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv3_16): FSF_16(
        (dropout): Dropout2d(p=0.07)
        (conv3x1_0): Conv2d(96, 96, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_1): Conv2d(96, 96, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x3_2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), groups=96)
        (bn1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv4_16): FSF_16(
        (dropout): Dropout2d(p=0.08)
        (conv3x1_0): Conv2d(96, 96, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (conv1x3_1): Conv2d(96, 96, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (conv3x3_2): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8), groups=96)
        (bn1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv1x1_32_64_channel): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1))
      (bn_conv1x1_32_64_channel): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      (conv1_32): FSF_32(
        (dropout): Dropout2d(p=0.05)
        (conv3x1_0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=128)
        (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv2_32): FSF_32(
        (dropout): Dropout2d(p=0.06)
        (conv3x1_0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), groups=128)
        (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv3_32): FSF_32(
        (dropout): Dropout2d(p=0.07)
        (conv3x1_0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), groups=128)
        (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (conv4_32): FSF_32(
        (dropout): Dropout2d(p=0.08)
        (conv3x1_0): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (conv1x3_1): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1))
        (conv3x3_2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(8, 8), dilation=(8, 8), groups=128)
        (bn1): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (bn2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      )
      (output_conv): Conv2d(128, 66, kernel_size=(1, 1), stride=(1, 1))
    )
    (decoder): Decoder(
      (conv1x1_merge_32_16): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (bn_merge1x1_32_16): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      (conv3x3_merge_32_16): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
      (bn_merge3x3_32_16): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      (conv1x1_merge_16_8): Conv2d(32, 48, kernel_size=(1, 1), stride=(1, 1))
      (bn_merge1x1_16_8): BatchNorm2d(48, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      (conv3x3_merge_16_8): Conv2d(112, 32, kernel_size=(1, 1), stride=(1, 1))
      (bn_merge3x3_16_8): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
      (output_conv): Conv2d(32, 66, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)